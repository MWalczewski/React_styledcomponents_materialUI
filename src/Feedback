Piszę z feedbackiem odnośnie pracy domowej. Generalnie dobra robota, wszystko w zasadzie działa jak należy i z takich większych rzeczy do poprawy to znalazłem chyba tylko 1 czy 2 bugi a reszta to już czysto koncepcyjne rzeczy jednak nad nimi też trzeba pracować i polepszać czytelność kodu.
Jak zwykle polecę w podpunktach:

1. Wszystkie inputy w które się wpisuje cokolwiek należałoby jakoś zabezpieczyć aby nie dało się wpisać za dużo tekstu bo jak wpiszę tam np. 1000 znaków to rozwala to stronkę :D Wiem, że nie było tego w treści zadania ale to tak dodatkowo ode mnie bo i tak bardzo dobrze sobie radzisz, więc trzeba popychać limit :) Także proponuję zabezpieczyć inputy aby nie dało się wpisać tam niewiadomo ile tekstu oraz przystosować CSS tylko po to, aby nie rozwalała się stronka (np. menu nawigacji wyjeżdża poza ekran). Tak samo na podstronie TODO za każdym razem gdy wpisujemy wyraz dłuższy niż te istniejące to strona rozciąga się i cały tekst przeskakuje - efekt niepożądany :)
2. Ważna sprawa - po wejściu na listę postaci zobacz w devtoolsach w zakładce network (zaznacz Fetch/XHR) co się dzieje. Występuje pętla w której fetchowane są non stop karty postaci więc to jest coś na co musisz uważać przy fetchowaniu danych. Dość ważny bug do naprawienia przez bardzo małą pierdołę, którą pozwolę Ci odnaleźć samemu :) Jeśli będziesz miał z tym problem to napisz do mnie za jakiś czas,
3. Przydałoby się dodać jakąś podstawową walidację na inputach w zakładce contant tak aby w polu email musiała wystąpić @ i aby oba pole nie mogłby być puste - bardzo prosta sprawa do zrobienia i wymaga minimum nakładu. Tak samo w inpucie który dodaje kolejne pozycje do TODO listy :)
4. Wiem, że nie mieliście się skupiać na warstwie wizualnej ale o takich rzeczach jak cursor: pointer to pamiętaj zawsze żeby dodać bo to jest 15 sekund a o wiele ułatwia korzystanie ze stronki,
5. Jak fetchujesz jakieś dane to link z API najlepiej przypisać sobie do zmiennej np. const BASE_URL = https://rickandmortyapi.com/api/character/?page=1 i wtedy używać tej zmiennej w fetchu :) W przyszłości ułatwi to sprawę jak będzie trzeba fetchować różne dane z tego samego api i wtedy będziesz mógł sobie robić np. fetch(BASE_URL/${cośtam}),
6. Pamiętaj aby w funkcji fetchującej zawsze umieszczać catch gdzie wyłapujesz ewentualne errory i np. console logujesz je,
7. Przypominam o zainstalowaniu eslinta i eliminowaniu nieużywanego kodu jak np. w NavigationBar gdzie zaimportowałeś useState i useEffect ale ich nie używasz, tak samo w NavigationButtons - przekazujesz do niego propsa clickedButton którego potem w ogóle nie używasz :)
8. Na podstronie Page radziłbym użyć switch zamiast robić to na ifach i elsach, byłoby przejrzyściej - polecam :D
9. Ponawiam prośbę o usuwanie zbędnych komentarzy a w tym przypadku wygląda na to, że jakieś niepotrzebne pliki jeszcze pozostały w projekcie jak np. ToDo_with_remove.js oraz try.js,
10. Pliki nazywamy za pomocą tak zwanego "camel case" więc np. nazwa powyższego pliku powinna brzmieć TodoWithRemove :)
11. W pliku Contact stworzyłeś state jako obiekt. Lepiej byłoby stworzyć dwa oddzielne stany na text i email ponieważ w skrócie mówiąć można oszczędzić stronce sporo rerenderów a i czytelność w ten sposób często jest po prostu lepsza,
12. W pliku CharacterList robisz destrukturyzację obiektu char za pomocą let jednak zawsze tam gdzie nie jest potrzebny let powinniśmy używać const, to samo w pliku ToDo gdzie określasz tablicę. Gdy tworzymy tablicę możemy (a nawet powinniśmy) zrobić to za pomocą const. Przykładowa dyskusja rozwijająca temat:
    https://stackoverflow.com/questions/46553062/what-is-the-preferred-declaration-convention-for-objects-or-arrays-const-or-let
13. Funkcja displayValues w pliku Contact nie robi tak naprawdę nic i jest tam zupełnie niepotrzebna,
14. Pamiętaj o destrukturyzacji - są miejsca w których mógłbyś sobie bardziej destrukturyzować kod co skraca i upraszcza zapis. Generalnie widzę, że robisz to ale nie wszędzie gdzie możesz :slightly_smiling_face:
    Jak widzisz prawie same pierdoły do poprawy, ogólnie jest dobrze :slightly_smiling_face: Jak poprawisz to daj znaka :slightly_smiling_face:
